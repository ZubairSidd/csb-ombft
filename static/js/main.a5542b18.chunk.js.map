{"version":3,"sources":["App.js","index.js"],"names":["emojiDict","emojiDictKeys","Object","keys","App","useState","meaning","setMeaning","className","name","onChange","emoji","target","value","map","style","fontSize","padding","marginTop","onClick","emojiClickHandler","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wKAGMA,EAAY,CAChB,eAAM,gBACN,eAAM,iCACN,eAAM,gCACN,eAAM,+BACN,eAAM,qBACN,eAAM,2BACN,eAAM,gBACN,eAAM,sBACN,eAAM,gBACN,eAAM,gBAGFC,EAAgBC,OAAOC,KAAKH,GAEnB,SAASI,IAAO,IAAD,EACEC,mBAC5B,0CAF0B,mBACrBC,EADqB,KACZC,EADY,KAiB5B,OACE,sBAAKC,UAAU,MAAf,UACE,yCACA,uBAAOC,KAAK,OAAOC,SAfvB,SAAoBC,GACdA,EAAMC,OAAOC,SAASb,EACxBO,EAAWP,EAAUW,EAAMC,OAAOC,QAElCN,EAAW,8BAYX,6BAAKD,IACL,gDACCL,EAAca,KAAI,SAAUH,GAC3B,OACE,uBACEI,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,UAAW,QACzDC,QAAS,kBAdnB,SAA2BR,GACzBJ,EAAWP,EAAUW,IAaES,CAAkBT,IAFnC,UAIG,IACAA,EAAO,aC3CpB,IAAMU,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACrB,EAAD,MAEFiB,I","file":"static/js/main.a5542b18.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst emojiDict = {\n  \"üòÄ\": \"grinning face\",\n  \"üòÅ\": \"beaming face with smiling eyes\",\n  \"ü§£\": \"rolling on the floor laughing\",\n  \"üòç\": \"smiling face with heart-eyes\",\n  \"üòã\": \"face savoring food\",\n  \"üòú\": \"winking face with tongue\",\n  \"ü§î\": \"thinking face\",\n  \"üòë\": \"expressionless face\",\n  \"üòí\": \"unamused face\",\n  \"üòî\": \"pensive face\"\n};\n\nconst emojiDictKeys = Object.keys(emojiDict);\n\nexport default function App() {\n  const [meaning, setMeaning] = useState(\n    \"meaning of emoji will be shown here...\"\n  );\n\n  function outputText(emoji) {\n    if (emoji.target.value in emojiDict) {\n      setMeaning(emojiDict[emoji.target.value]);\n    } else {\n      setMeaning(\"couldn't found anything\");\n    }\n  }\n\n  function emojiClickHandler(emoji) {\n    setMeaning(emojiDict[emoji]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Emogies</h1>\n      <input name=\"name\" onChange={outputText} />\n      <h2>{meaning}</h2>\n      <h3>Emojis we know</h3>\n      {emojiDictKeys.map(function (emoji) {\n        return (\n          <span\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", marginTop: \"1rem\" }}\n            onClick={() => emojiClickHandler(emoji)}\n          >\n            {\" \"}\n            {emoji}{\" \"}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}